@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@inject SignInManager<IdentityUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" style="color:white;" id="profile" asp-page="./Index">@Localizer["Profile"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" style="color:white;" id="email" asp-page="./Email">@Localizer["Email"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" style="color:white;" id="change-password" asp-page="./ChangePassword">@Localizer["Password"]</a></li>
    @*@if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
    }*@
    <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" style="color:white;" id="two-factor" asp-page="./TwoFactorAuthentication">@Localizer["TwoFactorAuth"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" style="color:white;" id="personal-data" asp-page="./PersonalData">@Localizer["PersonalData"]</a></li>
</ul>
