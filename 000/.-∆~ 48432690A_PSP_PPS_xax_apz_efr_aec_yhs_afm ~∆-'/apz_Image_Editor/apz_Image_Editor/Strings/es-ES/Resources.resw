<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aceptar" xml:space="preserve">
    <value>Aceptar</value>
  </data>
  <data name="btnAceptar.Content" xml:space="preserve">
    <value>Aceptar</value>
  </data>
  <data name="btnBN.Content" xml:space="preserve">
    <value>Blanco/Negro</value>
  </data>
  <data name="btnBN.ToolTipService.ToolTip" xml:space="preserve">
    <value>Transforma la imagen actual a blanco y negro</value>
  </data>
  <data name="btnBordes.Content" xml:space="preserve">
    <value>Pixelar</value>
  </data>
  <data name="btnBordes.ToolTipService.ToolTip" xml:space="preserve">
    <value>Seleccionando una tolerancia de diferenciación de color, genera una imagen con el fondo elegido y pixeles representativos en el color seleccionado</value>
  </data>
  <data name="btnCancelar.Content" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="btnContornos.Content" xml:space="preserve">
    <value>Contornos</value>
  </data>
  <data name="btnContornos.ToolTipService.ToolTip" xml:space="preserve">
    <value>Función experimental, Dibuja los contornos de los distintos elementos bien definidos de una imágen</value>
  </data>
  <data name="btnCut.Content" xml:space="preserve">
    <value>Trocear</value>
  </data>
  <data name="btnCut.ToolTipService.ToolTip" xml:space="preserve">
    <value>Divide la imagen en filas y columnas, tras Aceptar deberá seleccionar una carpeta para guardar los archivos resultantes de trocear la imagen (Tiene un máximo en 10 filas y 10 columas y un mínimo de 1 y 1)</value>
  </data>
  <data name="btnFrame.Content" xml:space="preserve">
    <value>Enmarcar</value>
  </data>
  <data name="btnFrame.ToolTipService.ToolTip" xml:space="preserve">
    <value>Crea un marco alrededor de la imagen de un color determinado (Se puede superponer varios marcos de distintos colores) (Se puede seleccionar un segundo color para crear un gradiente entre dos colores)</value>
  </data>
  <data name="btnInvColores.Content" xml:space="preserve">
    <value>Invertir colores</value>
  </data>
  <data name="btnInvColores.ToolTipService.ToolTip" xml:space="preserve">
    <value>Cambia los colores de cada pixel de la imagen por su inverso</value>
  </data>
  <data name="btnLimpiar.Content" xml:space="preserve">
    <value>Limpiar</value>
  </data>
  <data name="btnLimpiar.ToolTipService.ToolTip" xml:space="preserve">
    <value>Elimina pixel sueltos y los reestablece a los pixel vecinos</value>
  </data>
  <data name="btnOriginal.Content" xml:space="preserve">
    <value>Original</value>
  </data>
  <data name="btnOriginal.ToolTipService.ToolTip" xml:space="preserve">
    <value>Vuelve a la imagen original seleccionada en un principio</value>
  </data>
  <data name="btnRecortar.Content" xml:space="preserve">
    <value>Recortar</value>
  </data>
  <data name="btnRecortar.ToolTipService.ToolTip" xml:space="preserve">
    <value>Recorta la imagen actual</value>
  </data>
  <data name="btnSave.Content" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="btnSave.ToolTipService.ToolTip" xml:space="preserve">
    <value>Guarda la imagen actual en un archivo, puede cambiar el tipo de imagen a jpg, png o bmp</value>
  </data>
  <data name="btnSeleccionarImagen.Content" xml:space="preserve">
    <value>Seleccione una imagen</value>
  </data>
  <data name="btnSeleccionarImagen.ToolTipService.ToolTip" xml:space="preserve">
    <value>Seleccione una imagen desde la carpeta Imágenes de Windows, estamos trabajando para garantizar la carga desde cualquier localización</value>
  </data>
  <data name="btnVerAnuncio.Content" xml:space="preserve">
    <value>Ver Anuncio</value>
  </data>
  <data name="btnVerAnuncio.ToolTipService.ToolTip" xml:space="preserve">
    <value>Ver Anuncio</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>Cerrar</value>
  </data>
  <data name="dibujarContornos" xml:space="preserve">
    <value>Dibujar contornos</value>
  </data>
  <data name="enmarcar" xml:space="preserve">
    <value>Enmarcar</value>
  </data>
  <data name="errorContornos" xml:space="preserve">
    <value>No es posible procesar contornos en esta imagen, pruebe a subir o bajar la tolerancia</value>
  </data>
  <data name="pixelar" xml:space="preserve">
    <value>Pixelar</value>
  </data>
  <data name="regionNoValida" xml:space="preserve">
    <value>Seleccionó una región no válida</value>
  </data>
  <data name="tbBackgroundColor.Text" xml:space="preserve">
    <value>Color de fondo:</value>
  </data>
  <data name="tbBrillo.Text" xml:space="preserve">
    <value>Brillo</value>
  </data>
  <data name="tbColor.Text" xml:space="preserve">
    <value>Color:</value>
  </data>
  <data name="tbColor2.Text" xml:space="preserve">
    <value>Añadir 2º Color (gradiente):</value>
  </data>
  <data name="tbColumnas.Text" xml:space="preserve">
    <value>Columnas:</value>
  </data>
  <data name="tbContraste.Text" xml:space="preserve">
    <value>Contraste</value>
  </data>
  <data name="tbFilas.Text" xml:space="preserve">
    <value>Filas:</value>
  </data>
  <data name="tbFrameSize.Text" xml:space="preserve">
    <value>Tamaño Marco (pixels):</value>
  </data>
  <data name="tbFuncionExperimental.Text" xml:space="preserve">
    <value>FUNCIóN EXPERIMENTAL, PUEDE TARDAR UN RATO</value>
  </data>
  <data name="tbPixelsColor.Text" xml:space="preserve">
    <value>Color de pixels:</value>
  </data>
  <data name="tbTolerancia.Text" xml:space="preserve">
    <value>Tolerancia:</value>
  </data>
  <data name="trocear" xml:space="preserve">
    <value>Trocear</value>
  </data>
</root>